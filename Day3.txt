Python Standard data types:

number
string
list
tuple
dictionary
set

   x=10
   x=x+5    =>  x+=5
   print(x)  

x=2
bitwise operators: 0 (False)
 an 1(True)

bitwise and(&): bits are set to 1 if both the inputs are 1 otherwise 0

bitwise or ( | ): bits are set to 1 if both the inputs or ane one of the inputs is 1 otherwise 0.

bitwise Exclusive or (XOR) (^): bits are set to 1 if ane one of inputs is 1 otherise false.

0  0     0
0  1     1
1  0     1
1  1     0


leftshift (<<)
rightshift operators (>>)

                                            16     8    4   2   1

                                             1   0     1    0    0
		            0  0     1    0    0



                                              1     0      1       0      0  - bitwise or



                                              0     0       1      0     0  -  bitwise and
                                                                       

                                                     a>>2         0 0 0 1    



                                              1   0     1    0    0    0   0    0       a<<3



  [index number]


   [start : end : step]

start to (end-1)



>>> s="CDAC Noida"
>>> s[:]
'CDAC Noida'
>>> s[0:10]
'CDAC Noida'
>>> s[0:10:2]
'CA od'
>>> s[0:10:3]
'CCoa'
>>> s[0:10:1]
'CDAC Noida'
>>> s[0:10:-1]
''
>>> s[10:1:-1]
'adioN CA'
>>> s[9:1:-1]
'adioN CA'
>>> s[9:0:-1]
'adioN CAD'
>>> s[9::-1]
'adioN CADC'
>>> s[9:0:1]
''
>>> s[9::-2]
'aiNCD'
>>> s[0::2]
'CA od'
>>> s[0::2]#CDAC Noida
'CA od'
>>> s[0::-2]#CDAC Noida
'C'
>>> s[::-2]#CDAC Noida
'aiNCD'
>>> s[9::-2]#CDAC Noida
'aiNCD'
>>> s[9:2:-2]#CDAC Noida
'aiNC'
>>> 



Immutable types: can not be changed once assigned.Example: Number,string and tuple.


Mutable types: that can be changed at any time.Example: List,Dictionary and set

Decimal no. system base 10   0,---9
Binary no. system    base 2   0 and 1
octal no.system base 8   0 to 7
hexadecimal no..system base 16        0-9,A,B,C,D,E,F


>>> x='1010'
>>> d=int(x)
>>> d
1010
>>> d=int(x,10)
>>> d
1010
>>> d=int(x,2)
>>> d
10
>>> d=int(x,8)
>>> d
520
>>> x='FF'
>>> d=int(x)
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    d=int(x)
ValueError: invalid literal for int() with base 10: 'FF'
>>> d=int(x,16)
>>> d
255
>>> x='10103'
>>> d=int(x,2)
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    d=int(x,2)
ValueError: invalid literal for int() with base 2: '10103'



>>> x=65
>>> c = chr(x)
>>> c
'A'
>>> c = chr(48)
>>> c
'0'
>>> c1='A'
>>> ord(c1)
65
>>> c1='a'
>>> ord(c1)
97
>>> d=10
>>> h = hex(d)
>>> h
'0xa'
>>> n1= oct(d)
>>> n1
'0o12'
>>> n1= bin(d)
>>> n1
'0b1010'
>>> 








